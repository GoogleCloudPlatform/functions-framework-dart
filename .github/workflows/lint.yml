# Created with package:mono_repo v6.5.7
name: Dart Lint CI
on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: "0 0 * * 0"
defaults:
  run:
    shell: bash
env:
  PUB_ENVIRONMENT: bot.github
permissions: read-all

jobs:
  job_001:
    name: mono_repo self validate
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:stable"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - name: Setup Dart SDK
        uses: dart-lang/setup-dart@d6a63dab3335f427404425de0fbfed4686d93c4f
        with:
          sdk: stable
      - id: checkout
        name: Checkout repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
      - name: mono_repo self validate
        run: dart pub global activate mono_repo 6.5.7
      - name: mono_repo self validate
        run: dart pub global run mono_repo generate --validate
  job_002:
    name: "analyze_format; Dart 3.0.0; PKGS: dartfn, dartfn/templates/cloudevent, dartfn/templates/helloworld, dartfn/templates/json, examples/fullstack/backend, examples/fullstack/frontend-cli, examples/hello, examples/json, examples/protobuf_firestore, examples/raw_cloudevent, functions_framework, functions_framework_builder, google_cloud; `dart analyze`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:3.0.0;packages:dartfn-dartfn/templates/cloudevent-dartfn/templates/helloworld-dartfn/templates/json-examples/fullstack/backend-examples/fullstack/frontend-cli-examples/hello-examples/json-examples/protobuf_firestore-examples/raw_cloudevent-functions_framework-functions_framework_builder-google_cloud;commands:analyze_1"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:3.0.0;packages:dartfn-dartfn/templates/cloudevent-dartfn/templates/helloworld-dartfn/templates/json-examples/fullstack/backend-examples/fullstack/frontend-cli-examples/hello-examples/json-examples/protobuf_firestore-examples/raw_cloudevent-functions_framework-functions_framework_builder-google_cloud
            os:ubuntu-latest;pub-cache-hosted;sdk:3.0.0
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - name: Setup Dart SDK
        uses: dart-lang/setup-dart@d6a63dab3335f427404425de0fbfed4686d93c4f
        with:
          sdk: "3.0.0"
      - id: checkout
        name: Checkout repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
      - id: dartfn_pub_upgrade
        name: dartfn; dart pub upgrade
        run: dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: dartfn
      - name: dartfn; dart analyze
        run: dart analyze
        if: "always() && steps.dartfn_pub_upgrade.conclusion == 'success'"
        working-directory: dartfn
      - id: dartfn_templates_cloudevent_pub_upgrade
        name: dartfn/templates/cloudevent; dart pub upgrade
        run: dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: dartfn/templates/cloudevent
      - name: dartfn/templates/cloudevent; dart analyze
        run: dart analyze
        if: "always() && steps.dartfn_templates_cloudevent_pub_upgrade.conclusion == 'success'"
        working-directory: dartfn/templates/cloudevent
      - id: dartfn_templates_helloworld_pub_upgrade
        name: dartfn/templates/helloworld; dart pub upgrade
        run: dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: dartfn/templates/helloworld
      - name: dartfn/templates/helloworld; dart analyze
        run: dart analyze
        if: "always() && steps.dartfn_templates_helloworld_pub_upgrade.conclusion == 'success'"
        working-directory: dartfn/templates/helloworld
      - id: dartfn_templates_json_pub_upgrade
        name: dartfn/templates/json; dart pub upgrade
        run: dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: dartfn/templates/json
      - name: dartfn/templates/json; dart analyze
        run: dart analyze
        if: "always() && steps.dartfn_templates_json_pub_upgrade.conclusion == 'success'"
        working-directory: dartfn/templates/json
      - id: examples_fullstack_backend_pub_upgrade
        name: examples/fullstack/backend; dart pub upgrade
        run: dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: examples/fullstack/backend
      - name: examples/fullstack/backend; dart analyze
        run: dart analyze
        if: "always() && steps.examples_fullstack_backend_pub_upgrade.conclusion == 'success'"
        working-directory: examples/fullstack/backend
      - id: examples_fullstack_frontend-cli_pub_upgrade
        name: "examples/fullstack/frontend-cli; dart pub upgrade"
        run: dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: examples/fullstack/frontend-cli
      - name: "examples/fullstack/frontend-cli; dart analyze"
        run: dart analyze
        if: "always() && steps.examples_fullstack_frontend-cli_pub_upgrade.conclusion == 'success'"
        working-directory: examples/fullstack/frontend-cli
      - id: examples_hello_pub_upgrade
        name: examples/hello; dart pub upgrade
        run: dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: examples/hello
      - name: examples/hello; dart analyze
        run: dart analyze
        if: "always() && steps.examples_hello_pub_upgrade.conclusion == 'success'"
        working-directory: examples/hello
      - id: examples_json_pub_upgrade
        name: examples/json; dart pub upgrade
        run: dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: examples/json
      - name: examples/json; dart analyze
        run: dart analyze
        if: "always() && steps.examples_json_pub_upgrade.conclusion == 'success'"
        working-directory: examples/json
      - id: examples_protobuf_firestore_pub_upgrade
        name: examples/protobuf_firestore; dart pub upgrade
        run: dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: examples/protobuf_firestore
      - name: examples/protobuf_firestore; dart analyze
        run: dart analyze
        if: "always() && steps.examples_protobuf_firestore_pub_upgrade.conclusion == 'success'"
        working-directory: examples/protobuf_firestore
      - id: examples_raw_cloudevent_pub_upgrade
        name: examples/raw_cloudevent; dart pub upgrade
        run: dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: examples/raw_cloudevent
      - name: examples/raw_cloudevent; dart analyze
        run: dart analyze
        if: "always() && steps.examples_raw_cloudevent_pub_upgrade.conclusion == 'success'"
        working-directory: examples/raw_cloudevent
      - id: functions_framework_pub_upgrade
        name: functions_framework; dart pub upgrade
        run: dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: functions_framework
      - name: functions_framework; dart analyze
        run: dart analyze
        if: "always() && steps.functions_framework_pub_upgrade.conclusion == 'success'"
        working-directory: functions_framework
      - id: functions_framework_builder_pub_upgrade
        name: functions_framework_builder; dart pub upgrade
        run: dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: functions_framework_builder
      - name: functions_framework_builder; dart analyze
        run: dart analyze
        if: "always() && steps.functions_framework_builder_pub_upgrade.conclusion == 'success'"
        working-directory: functions_framework_builder
      - id: google_cloud_pub_upgrade
        name: google_cloud; dart pub upgrade
        run: dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: google_cloud
      - name: google_cloud; dart analyze
        run: dart analyze
        if: "always() && steps.google_cloud_pub_upgrade.conclusion == 'success'"
        working-directory: google_cloud
  job_003:
    name: "analyze_format; Dart dev; PKGS: dartfn, dartfn/templates/cloudevent, dartfn/templates/helloworld, dartfn/templates/json, examples/fullstack/backend, examples/fullstack/frontend-cli, examples/hello, examples/json, examples/protobuf_firestore, examples/raw_cloudevent, functions_framework, functions_framework_builder, google_cloud, integration_test; `dart format --output=none --set-exit-if-changed .`, `dart analyze --fatal-infos`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:dev;packages:dartfn-dartfn/templates/cloudevent-dartfn/templates/helloworld-dartfn/templates/json-examples/fullstack/backend-examples/fullstack/frontend-cli-examples/hello-examples/json-examples/protobuf_firestore-examples/raw_cloudevent-functions_framework-functions_framework_builder-google_cloud-integration_test;commands:format-analyze_0"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:dev;packages:dartfn-dartfn/templates/cloudevent-dartfn/templates/helloworld-dartfn/templates/json-examples/fullstack/backend-examples/fullstack/frontend-cli-examples/hello-examples/json-examples/protobuf_firestore-examples/raw_cloudevent-functions_framework-functions_framework_builder-google_cloud-integration_test
            os:ubuntu-latest;pub-cache-hosted;sdk:dev
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - name: Setup Dart SDK
        uses: dart-lang/setup-dart@d6a63dab3335f427404425de0fbfed4686d93c4f
        with:
          sdk: dev
      - id: checkout
        name: Checkout repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
      - id: dartfn_pub_upgrade
        name: dartfn; dart pub upgrade
        run: dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: dartfn
      - name: "dartfn; dart format --output=none --set-exit-if-changed ."
        run: "dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.dartfn_pub_upgrade.conclusion == 'success'"
        working-directory: dartfn
      - name: "dartfn; dart analyze --fatal-infos"
        run: dart analyze --fatal-infos
        if: "always() && steps.dartfn_pub_upgrade.conclusion == 'success'"
        working-directory: dartfn
      - id: dartfn_templates_cloudevent_pub_upgrade
        name: dartfn/templates/cloudevent; dart pub upgrade
        run: dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: dartfn/templates/cloudevent
      - name: "dartfn/templates/cloudevent; dart format --output=none --set-exit-if-changed ."
        run: "dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.dartfn_templates_cloudevent_pub_upgrade.conclusion == 'success'"
        working-directory: dartfn/templates/cloudevent
      - name: "dartfn/templates/cloudevent; dart analyze --fatal-infos"
        run: dart analyze --fatal-infos
        if: "always() && steps.dartfn_templates_cloudevent_pub_upgrade.conclusion == 'success'"
        working-directory: dartfn/templates/cloudevent
      - id: dartfn_templates_helloworld_pub_upgrade
        name: dartfn/templates/helloworld; dart pub upgrade
        run: dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: dartfn/templates/helloworld
      - name: "dartfn/templates/helloworld; dart format --output=none --set-exit-if-changed ."
        run: "dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.dartfn_templates_helloworld_pub_upgrade.conclusion == 'success'"
        working-directory: dartfn/templates/helloworld
      - name: "dartfn/templates/helloworld; dart analyze --fatal-infos"
        run: dart analyze --fatal-infos
        if: "always() && steps.dartfn_templates_helloworld_pub_upgrade.conclusion == 'success'"
        working-directory: dartfn/templates/helloworld
      - id: dartfn_templates_json_pub_upgrade
        name: dartfn/templates/json; dart pub upgrade
        run: dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: dartfn/templates/json
      - name: "dartfn/templates/json; dart format --output=none --set-exit-if-changed ."
        run: "dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.dartfn_templates_json_pub_upgrade.conclusion == 'success'"
        working-directory: dartfn/templates/json
      - name: "dartfn/templates/json; dart analyze --fatal-infos"
        run: dart analyze --fatal-infos
        if: "always() && steps.dartfn_templates_json_pub_upgrade.conclusion == 'success'"
        working-directory: dartfn/templates/json
      - id: examples_fullstack_backend_pub_upgrade
        name: examples/fullstack/backend; dart pub upgrade
        run: dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: examples/fullstack/backend
      - name: "examples/fullstack/backend; dart format --output=none --set-exit-if-changed ."
        run: "dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.examples_fullstack_backend_pub_upgrade.conclusion == 'success'"
        working-directory: examples/fullstack/backend
      - name: "examples/fullstack/backend; dart analyze --fatal-infos"
        run: dart analyze --fatal-infos
        if: "always() && steps.examples_fullstack_backend_pub_upgrade.conclusion == 'success'"
        working-directory: examples/fullstack/backend
      - id: examples_fullstack_frontend-cli_pub_upgrade
        name: "examples/fullstack/frontend-cli; dart pub upgrade"
        run: dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: examples/fullstack/frontend-cli
      - name: "examples/fullstack/frontend-cli; dart format --output=none --set-exit-if-changed ."
        run: "dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.examples_fullstack_frontend-cli_pub_upgrade.conclusion == 'success'"
        working-directory: examples/fullstack/frontend-cli
      - name: "examples/fullstack/frontend-cli; dart analyze --fatal-infos"
        run: dart analyze --fatal-infos
        if: "always() && steps.examples_fullstack_frontend-cli_pub_upgrade.conclusion == 'success'"
        working-directory: examples/fullstack/frontend-cli
      - id: examples_hello_pub_upgrade
        name: examples/hello; dart pub upgrade
        run: dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: examples/hello
      - name: "examples/hello; dart format --output=none --set-exit-if-changed ."
        run: "dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.examples_hello_pub_upgrade.conclusion == 'success'"
        working-directory: examples/hello
      - name: "examples/hello; dart analyze --fatal-infos"
        run: dart analyze --fatal-infos
        if: "always() && steps.examples_hello_pub_upgrade.conclusion == 'success'"
        working-directory: examples/hello
      - id: examples_json_pub_upgrade
        name: examples/json; dart pub upgrade
        run: dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: examples/json
      - name: "examples/json; dart format --output=none --set-exit-if-changed ."
        run: "dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.examples_json_pub_upgrade.conclusion == 'success'"
        working-directory: examples/json
      - name: "examples/json; dart analyze --fatal-infos"
        run: dart analyze --fatal-infos
        if: "always() && steps.examples_json_pub_upgrade.conclusion == 'success'"
        working-directory: examples/json
      - id: examples_protobuf_firestore_pub_upgrade
        name: examples/protobuf_firestore; dart pub upgrade
        run: dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: examples/protobuf_firestore
      - name: "examples/protobuf_firestore; dart format --output=none --set-exit-if-changed ."
        run: "dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.examples_protobuf_firestore_pub_upgrade.conclusion == 'success'"
        working-directory: examples/protobuf_firestore
      - name: "examples/protobuf_firestore; dart analyze --fatal-infos"
        run: dart analyze --fatal-infos
        if: "always() && steps.examples_protobuf_firestore_pub_upgrade.conclusion == 'success'"
        working-directory: examples/protobuf_firestore
      - id: examples_raw_cloudevent_pub_upgrade
        name: examples/raw_cloudevent; dart pub upgrade
        run: dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: examples/raw_cloudevent
      - name: "examples/raw_cloudevent; dart format --output=none --set-exit-if-changed ."
        run: "dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.examples_raw_cloudevent_pub_upgrade.conclusion == 'success'"
        working-directory: examples/raw_cloudevent
      - name: "examples/raw_cloudevent; dart analyze --fatal-infos"
        run: dart analyze --fatal-infos
        if: "always() && steps.examples_raw_cloudevent_pub_upgrade.conclusion == 'success'"
        working-directory: examples/raw_cloudevent
      - id: functions_framework_pub_upgrade
        name: functions_framework; dart pub upgrade
        run: dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: functions_framework
      - name: "functions_framework; dart format --output=none --set-exit-if-changed ."
        run: "dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.functions_framework_pub_upgrade.conclusion == 'success'"
        working-directory: functions_framework
      - name: "functions_framework; dart analyze --fatal-infos"
        run: dart analyze --fatal-infos
        if: "always() && steps.functions_framework_pub_upgrade.conclusion == 'success'"
        working-directory: functions_framework
      - id: functions_framework_builder_pub_upgrade
        name: functions_framework_builder; dart pub upgrade
        run: dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: functions_framework_builder
      - name: "functions_framework_builder; dart format --output=none --set-exit-if-changed ."
        run: "dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.functions_framework_builder_pub_upgrade.conclusion == 'success'"
        working-directory: functions_framework_builder
      - name: "functions_framework_builder; dart analyze --fatal-infos"
        run: dart analyze --fatal-infos
        if: "always() && steps.functions_framework_builder_pub_upgrade.conclusion == 'success'"
        working-directory: functions_framework_builder
      - id: google_cloud_pub_upgrade
        name: google_cloud; dart pub upgrade
        run: dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: google_cloud
      - name: "google_cloud; dart format --output=none --set-exit-if-changed ."
        run: "dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.google_cloud_pub_upgrade.conclusion == 'success'"
        working-directory: google_cloud
      - name: "google_cloud; dart analyze --fatal-infos"
        run: dart analyze --fatal-infos
        if: "always() && steps.google_cloud_pub_upgrade.conclusion == 'success'"
        working-directory: google_cloud
      - id: integration_test_pub_upgrade
        name: integration_test; dart pub upgrade
        run: dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: integration_test
      - name: "integration_test; dart format --output=none --set-exit-if-changed ."
        run: "dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.integration_test_pub_upgrade.conclusion == 'success'"
        working-directory: integration_test
      - name: "integration_test; dart analyze --fatal-infos"
        run: dart analyze --fatal-infos
        if: "always() && steps.integration_test_pub_upgrade.conclusion == 'success'"
        working-directory: integration_test
  job_004:
    name: "analyze_format; Dart dev; PKG: integration_test; `dart analyze`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:dev;packages:integration_test;commands:analyze_1"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:dev;packages:integration_test
            os:ubuntu-latest;pub-cache-hosted;sdk:dev
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - name: Setup Dart SDK
        uses: dart-lang/setup-dart@d6a63dab3335f427404425de0fbfed4686d93c4f
        with:
          sdk: dev
      - id: checkout
        name: Checkout repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
      - id: integration_test_pub_upgrade
        name: integration_test; dart pub upgrade
        run: dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: integration_test
      - name: integration_test; dart analyze
        run: dart analyze
        if: "always() && steps.integration_test_pub_upgrade.conclusion == 'success'"
        working-directory: integration_test
  job_005:
    name: "analyze_format; Flutter master; PKG: examples/fullstack/frontend; `dart format --output=none --set-exit-if-changed .`, `flutter analyze --fatal-infos`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:master;packages:examples/fullstack/frontend;commands:format-analyze_2"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:master;packages:examples/fullstack/frontend
            os:ubuntu-latest;pub-cache-hosted;sdk:master
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - name: Setup Flutter SDK
        uses: subosito/flutter-action@48cafc24713cca54bbe03cdc3a423187d413aafa
        with:
          channel: master
      - id: checkout
        name: Checkout repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
      - id: examples_fullstack_frontend_pub_upgrade
        name: examples/fullstack/frontend; flutter pub upgrade
        run: flutter pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: examples/fullstack/frontend
      - name: "examples/fullstack/frontend; dart format --output=none --set-exit-if-changed ."
        run: "dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.examples_fullstack_frontend_pub_upgrade.conclusion == 'success'"
        working-directory: examples/fullstack/frontend
      - name: "examples/fullstack/frontend; flutter analyze --fatal-infos"
        run: flutter analyze --fatal-infos
        if: "always() && steps.examples_fullstack_frontend_pub_upgrade.conclusion == 'success'"
        working-directory: examples/fullstack/frontend
  job_006:
    name: "analyze_format; Flutter stable; PKG: examples/fullstack/frontend; `flutter analyze`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:stable;packages:examples/fullstack/frontend;commands:analyze_3"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:stable;packages:examples/fullstack/frontend
            os:ubuntu-latest;pub-cache-hosted;sdk:stable
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - name: Setup Flutter SDK
        uses: subosito/flutter-action@48cafc24713cca54bbe03cdc3a423187d413aafa
        with:
          channel: stable
      - id: checkout
        name: Checkout repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
      - id: examples_fullstack_frontend_pub_upgrade
        name: examples/fullstack/frontend; flutter pub upgrade
        run: flutter pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: examples/fullstack/frontend
      - name: examples/fullstack/frontend; flutter analyze
        run: flutter analyze
        if: "always() && steps.examples_fullstack_frontend_pub_upgrade.conclusion == 'success'"
        working-directory: examples/fullstack/frontend
  job_007:
    name: Notify failure
    runs-on: ubuntu-latest
    if: "(github.event_name == 'push' || github.event_name == 'schedule') && failure()"
    steps:
      - run: |
          curl -H "Content-Type: application/json" -X POST -d \
            "{'text':'Build failed! ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}'}" \
            "${CHAT_WEBHOOK_URL}"
        env:
          CHAT_WEBHOOK_URL: "${{ secrets.CHAT_WEBHOOK_URL }}"
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
      - job_005
      - job_006
