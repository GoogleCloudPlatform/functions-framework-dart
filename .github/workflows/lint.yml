# Created with package:mono_repo v6.0.0
name: Dart Lint CI
on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: "0 0 * * 0"
defaults:
  run:
    shell: bash
env:
  PUB_ENVIRONMENT: bot.github

jobs:
  job_001:
    name: mono_repo self validate
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2.1.7
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:stable"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: stable
      - id: checkout
        uses: actions/checkout@v2.4.0
      - name: mono_repo self validate
        run: dart pub global activate mono_repo 6.0.0
      - name: mono_repo self validate
        run: dart pub global run mono_repo generate --validate
  job_002:
    name: "analyze_format; Dart 2.14.0; PKGS: dartfn, functions_framework, functions_framework_builder, integration_test; `dart analyze .`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2.1.7
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:2.14.0;packages:dartfn-functions_framework-functions_framework_builder-integration_test;commands:analyze_1"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:2.14.0;packages:dartfn-functions_framework-functions_framework_builder-integration_test
            os:ubuntu-latest;pub-cache-hosted;sdk:2.14.0
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: "2.14.0"
      - id: checkout
        uses: actions/checkout@v2.4.0
      - id: dartfn_pub_upgrade
        name: dartfn; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: dartfn
        run: dart pub upgrade
      - name: dartfn; dart analyze .
        if: "always() && steps.dartfn_pub_upgrade.conclusion == 'success'"
        working-directory: dartfn
        run: dart analyze .
      - id: functions_framework_pub_upgrade
        name: functions_framework; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: functions_framework
        run: dart pub upgrade
      - name: functions_framework; dart analyze .
        if: "always() && steps.functions_framework_pub_upgrade.conclusion == 'success'"
        working-directory: functions_framework
        run: dart analyze .
      - id: functions_framework_builder_pub_upgrade
        name: functions_framework_builder; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: functions_framework_builder
        run: dart pub upgrade
      - name: functions_framework_builder; dart analyze .
        if: "always() && steps.functions_framework_builder_pub_upgrade.conclusion == 'success'"
        working-directory: functions_framework_builder
        run: dart analyze .
      - id: integration_test_pub_upgrade
        name: integration_test; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: integration_test
        run: dart pub upgrade
      - name: integration_test; dart analyze .
        if: "always() && steps.integration_test_pub_upgrade.conclusion == 'success'"
        working-directory: integration_test
        run: dart analyze .
  job_003:
    name: "analyze_format; Dart 2.14.0; PKG: dartfn; `dart format --output=none --set-exit-if-changed .`, `dart analyze --fatal-infos .`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2.1.7
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:2.14.0;packages:dartfn;commands:format-analyze_0"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:2.14.0;packages:dartfn
            os:ubuntu-latest;pub-cache-hosted;sdk:2.14.0
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: "2.14.0"
      - id: checkout
        uses: actions/checkout@v2.4.0
      - id: dartfn_pub_upgrade
        name: dartfn; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: dartfn
        run: dart pub upgrade
      - name: "dartfn; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.dartfn_pub_upgrade.conclusion == 'success'"
        working-directory: dartfn
        run: "dart format --output=none --set-exit-if-changed ."
      - name: "dartfn; dart analyze --fatal-infos ."
        if: "always() && steps.dartfn_pub_upgrade.conclusion == 'success'"
        working-directory: dartfn
        run: dart analyze --fatal-infos .
  job_004:
    name: "analyze_format; Dart dev; PKG: dartfn; `dart analyze .`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2.1.7
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:dev;packages:dartfn;commands:analyze_1"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:dev;packages:dartfn
            os:ubuntu-latest;pub-cache-hosted;sdk:dev
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: dev
      - id: checkout
        uses: actions/checkout@v2.4.0
      - id: dartfn_pub_upgrade
        name: dartfn; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: dartfn
        run: dart pub upgrade
      - name: dartfn; dart analyze .
        if: "always() && steps.dartfn_pub_upgrade.conclusion == 'success'"
        working-directory: dartfn
        run: dart analyze .
  job_005:
    name: "analyze_format; Dart dev; PKGS: dartfn, functions_framework, functions_framework_builder, integration_test; `dart format --output=none --set-exit-if-changed .`, `dart analyze --fatal-infos .`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2.1.7
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:dev;packages:dartfn-functions_framework-functions_framework_builder-integration_test;commands:format-analyze_0"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:dev;packages:dartfn-functions_framework-functions_framework_builder-integration_test
            os:ubuntu-latest;pub-cache-hosted;sdk:dev
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: dev
      - id: checkout
        uses: actions/checkout@v2.4.0
      - id: dartfn_pub_upgrade
        name: dartfn; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: dartfn
        run: dart pub upgrade
      - name: "dartfn; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.dartfn_pub_upgrade.conclusion == 'success'"
        working-directory: dartfn
        run: "dart format --output=none --set-exit-if-changed ."
      - name: "dartfn; dart analyze --fatal-infos ."
        if: "always() && steps.dartfn_pub_upgrade.conclusion == 'success'"
        working-directory: dartfn
        run: dart analyze --fatal-infos .
      - id: functions_framework_pub_upgrade
        name: functions_framework; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: functions_framework
        run: dart pub upgrade
      - name: "functions_framework; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.functions_framework_pub_upgrade.conclusion == 'success'"
        working-directory: functions_framework
        run: "dart format --output=none --set-exit-if-changed ."
      - name: "functions_framework; dart analyze --fatal-infos ."
        if: "always() && steps.functions_framework_pub_upgrade.conclusion == 'success'"
        working-directory: functions_framework
        run: dart analyze --fatal-infos .
      - id: functions_framework_builder_pub_upgrade
        name: functions_framework_builder; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: functions_framework_builder
        run: dart pub upgrade
      - name: "functions_framework_builder; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.functions_framework_builder_pub_upgrade.conclusion == 'success'"
        working-directory: functions_framework_builder
        run: "dart format --output=none --set-exit-if-changed ."
      - name: "functions_framework_builder; dart analyze --fatal-infos ."
        if: "always() && steps.functions_framework_builder_pub_upgrade.conclusion == 'success'"
        working-directory: functions_framework_builder
        run: dart analyze --fatal-infos .
      - id: integration_test_pub_upgrade
        name: integration_test; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: integration_test
        run: dart pub upgrade
      - name: "integration_test; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.integration_test_pub_upgrade.conclusion == 'success'"
        working-directory: integration_test
        run: "dart format --output=none --set-exit-if-changed ."
      - name: "integration_test; dart analyze --fatal-infos ."
        if: "always() && steps.integration_test_pub_upgrade.conclusion == 'success'"
        working-directory: integration_test
        run: dart analyze --fatal-infos .
  job_006:
    name: Notify failure
    runs-on: ubuntu-latest
    if: "(github.event_name == 'push' || github.event_name == 'schedule') && failure()"
    steps:
      - run: |
          curl -H "Content-Type: application/json" -X POST -d \
            "{'text':'Build failed! ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}'}" \
            "${CHAT_WEBHOOK_URL}"
        env:
          CHAT_WEBHOOK_URL: "${{ secrets.CHAT_WEBHOOK_URL }}"
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
      - job_005
