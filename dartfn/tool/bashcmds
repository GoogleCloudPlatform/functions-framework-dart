# Helper commands to source into your bash environment during development

scriptdir="$PWD/$(dirname $(echo ${BASH_SOURCE[${#BASH_SOURCE[@]} - 1]}))"
pubdir="${scriptdir}/.."
bindir="${pubdir}/bin"

if [[ "${BASH_SOURCE[0]}" = "${0}" ]]; then
  echo "This bash shell script (${BASH_SOURCE[0]}) is meant to be sourced in, not executed. Try:"
  echo "  source bashcmds"
  echo "or from the repo root:"
  echo "  source tools/bashcmds"
  exit 1;
fi

# dart build - generates encoded templates from source
function db() {
  (cd $pubdir; dart run build_runner build --delete-conflicting-outputs "$@")
}

# run -> dart run bin/dartfn
function run() {
  dart run "${bindir}/dartfn.dart" "$@"
}

# activate
function da() {
  local p=${1:-$pubdir}
  dart pub global activate --overwrite -s path $p
}

# deactivate
function dx() {
  dart pub global deactivate dartfn
}

# reset env
function clean() {
  unset -f db
  unset -f run
  unset -f da
  unset -f dx
  unset -f clean
}

# print help
function dh() {
  echo "db    -  (re)build bin/dartfn with updated templates"
  echo "run   -  run updated bin/dartfn"
  echo "da    -  activate bin/dartfn"
  echo "dx    -  deactivate bin/dartfn"
  echo "clean -  remove these commands from the environment"
  echo "dh    -  print this help"
}

dh
